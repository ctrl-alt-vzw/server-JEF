{
  "3": {
    "inputs": {
      "seed": 145933739855182,
      "steps": 3,
      "cfg": 1.4000000000000001,
      "sampler_name": "euler",
      "scheduler": "simple",
      "denoise": 1,
      "model": [
        "4",
        0
      ],
      "positive": [
        "26",
        0
      ],
      "negative": [
        "26",
        1
      ],
      "latent_image": [
        "48",
        0
      ]
    },
    "class_type": "KSampler",
    "_meta": {
      "title": "KSampler"
    }
  },
  "4": {
    "inputs": {
      "ckpt_name": "FLUX1/flux1-schnell-fp8.safetensors"
    },
    "class_type": "CheckpointLoaderSimple",
    "_meta": {
      "title": "Load Checkpoint"
    }
  },
  "6": {
    "inputs": {
      "text": "Design an isolated isometric game asset of an angry, floating, Glitcher's Golem: A lumbering construct born from unstable data streams, fueled by Kaid's digital signature.. \n The warrior should be a sentient creature from Pixel DreamscapeIt should have glowing eyes and an aggressive expression, emphasizing its battle-ready stance. The warrior is called a [[STEP_VALUE]] \n It should be floating  with no ground below it. \n The style should be bright, colorful, and playful, suited for a 9-year-old, with a comic book-style, illustrative, and cel-shaded aesthetic to add depth and character. \n it should be looking to the left \n Ensure the artwork is presented in an isometric perspective, isolated from any distracting background elements, making it easy to integrate into a game engine.",
      "clip": [
        "4",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "7": {
    "inputs": {
      "text": "text, watermark, pixel art",
      "clip": [
        "4",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "12": {
    "inputs": {
      "path": "/home/ai-game-server/Documents/server-JEF/_volumes/images/190ae6cd-27f1-4abb-ae93-083e22b5d57f_HENCHMEN.png",
      "quality": 100,
      "images": [
        "52",
        0
      ]
    },
    "class_type": "ImageSaver",
    "_meta": {
      "title": "Image Save"
    }
  },
  "15": {
    "inputs": {
      "filename_prefix": "ComfyUI",
      "images": [
        "52",
        0
      ]
    },
    "class_type": "SaveImage",
    "_meta": {
      "title": "Save Image"
    }
  },
  "16": {
    "inputs": {
      "image": "henchemen_v3.png",
      "upload": "image"
    },
    "class_type": "LoadImage",
    "_meta": {
      "title": "Load Image"
    }
  },
  "19": {
    "inputs": {
      "preprocessor": "canny",
      "sd_version": "sdxl",
      "resolution": 512,
      "preprocessor_override": "None",
      "image": [
        "21",
        0
      ]
    },
    "class_type": "AV_ControlNetPreprocessor",
    "_meta": {
      "title": "ControlNet Preprocessor"
    }
  },
  "21": {
    "inputs": {
      "mode": "rescale",
      "supersample": "true",
      "resampling": "lanczos",
      "rescale_factor": 2,
      "resize_width": 512,
      "resize_height": 512,
      "image": [
        "16",
        0
      ]
    },
    "class_type": "Image Resize",
    "_meta": {
      "title": "Image Resize"
    }
  },
  "24": {
    "inputs": {
      "control_net_name": "flux-canny-controlnet-v3.safetensors"
    },
    "class_type": "ControlNetLoader",
    "_meta": {
      "title": "Load ControlNet Model"
    }
  },
  "26": {
    "inputs": {
      "strength": 0.4,
      "start_percent": 0.05,
      "end_percent": 0.5,
      "positive": [
        "6",
        0
      ],
      "negative": [
        "7",
        0
      ],
      "control_net": [
        "24",
        0
      ],
      "image": [
        "19",
        0
      ],
      "vae": [
        "4",
        2
      ]
    },
    "class_type": "ControlNetApplyAdvanced",
    "_meta": {
      "title": "Apply ControlNet"
    }
  },
  "47": {
    "inputs": {
      "samples": [
        "3",
        0
      ],
      "vae": [
        "4",
        2
      ]
    },
    "class_type": "VAEDecode",
    "_meta": {
      "title": "VAE Decode"
    }
  },
  "48": {
    "inputs": {
      "width": 512,
      "height": 512,
      "batch_size": 1
    },
    "class_type": "EmptySD3LatentImage",
    "_meta": {
      "title": "EmptySD3LatentImage"
    }
  },
  "50": {
    "inputs": {
      "images": [
        "47",
        0
      ]
    },
    "class_type": "PreviewImage",
    "_meta": {
      "title": "Preview Image"
    }
  },
  "52": {
    "inputs": {
      "transparency": true,
      "model": "isnet-general-use",
      "post_processing": false,
      "only_mask": false,
      "alpha_matting": false,
      "alpha_matting_foreground_threshold": 200,
      "alpha_matting_background_threshold": 9,
      "alpha_matting_erode_size": 9,
      "background_color": "none",
      "images": [
        "47",
        0
      ]
    },
    "class_type": "Image Rembg (Remove Background)",
    "_meta": {
      "title": "Image Rembg (Remove Background)"
    }
  },
  "53": {
    "inputs": {
      "Actions": "",
      "images": [
        "52",
        0
      ]
    },
    "class_type": "ImageOutput",
    "_meta": {
      "title": "Image(s) To Websocket (Base64)"
    }
  }
}